package member;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class MemberDAO {

	public int join(String id, String pw, String nick) {
		// TODO Auto-generated method stub
		int cnt = 0;
		Connection conn = null;
		PreparedStatement psmt = null;
		
		// 0. 드라이버 파일을 프로젝트 안에 넣어주기
		try {
			// 1. 드라이버 설치(동적로딩)
			// 왜 동적로딩인가
			// - 컴파일러는 아래의 코드를 만나기 전까지 어떠한 DBMS에
			// 드라이버를 사용하는지 모르고 아래의 코드를 만나는 순간
			// 해당 드라이버를 찾아서 설치를 한다
			Class.forName("oracle.jdbc.driver.OracleDriver");
		
		// 2. 커넥션 열기
		// - DB가 존재하는 url, 아이디, 비밀번호
		String db_url = "jdbc:oracle:thin:@localhost:1521:xe";
		String db_id = "shopping";
		String db_pw = "12345";
		
		conn = DriverManager.getConnection(db_url, db_id, db_pw);
		
		
		if(conn != null) {
			System.out.println("DB연결 성공!");
		}else {
			System.out.println("DB연결 실패...");
		}
		// 3. SQL문 실행
		// SQL문을 싱행하기 위해서는 조건이 있다
		// 1. sql문장이 이상없는지 검토를 받아야 한다
		String sql = "INSERT INTO MEMBER VALUES(?,?,?)";
		psmt = conn.prepareStatement(sql);
		
		// psmt객체가 sql문을 완성하고 실행할 수 있는 객체이다
		psmt.setString(1, id);
		psmt.setString(2, pw);
		psmt.setString(3, nick);
		// executeUpdate(); sql 문장을 실행하는 메소드
		// 실행한 문장의 개수를 int 형태로 반환
		cnt = psmt.executeUpdate();
		
		// 4. 종료(연결 끊기)
		

		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			// try가 잘 실행되거나
			// 또는 중간에 catch로 넘어간다고 하더라도
			// finally에는 마지막에 반드시 넘어오게 되어있다
			// 4.연결끊기
			// - 연결을 끊을 때는 역순으로 끊어준다
			try {
				if(psmt != null) {
					psmt.close();	
				}
				if (conn != null) {
					conn.close();
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}	return cnt;
	}
	// 데이터베이스에 연결하고 사용하는 것을 담당하는 클래스
	// DAO클래스가 모든 JDBC 기능을 수항핸다
	
	
	
	
	
}
